Par défaut, lorsque vous créez une VM, une carte réseau virtuelle lui est affectée, lui permettant d’accéder à Internet dans la plupart des cas.
Cependant, il se peut que tout cela ne fonctionne pas automatiquement. Vous devrez alors le configurer. 

Il existe plusieurs modes réseaux qui définissent comment votre VM va accéder au réseau ; voici les plus utilisés :

        * NAT (mode par défaut) ;

        * réseau NAT ;

        * accès par pont ;

        * réseau interne ;

        * réseau privé hôte.
        
Mode réseau

Exemple d’utilisation

NAT :

Vous souhaitez utiliser une seule VM et télécharger sur cette VM des applications, faire des mises à jour, surfer sur Internet.

Accès par pont :

Vous souhaitez que votre VM devienne un serveur web et donc qu’elle soit vue sur le réseau comme une machine physique avec sa propre adresse IP, accessible depuis l’extérieur.

Réseau interne :

Vous utilisez plusieurs VM pour simuler des réseaux privés qui n’ont pas d’accès vers l’extérieur ni vers la machine hôte.

Réseau NAT :

Même type d’utilisation que pour le NAT, avec plusieurs VM qui souhaitent pouvoir communiquer entre elles (impossible avec le mode NAT classique).

Réseau privé d’hôte :

Similaire au réseau interne, mais permettant aussi une communication avec l’hôte.




Connexion par pont solution car ma VM ne pouvais pas se co : 

se mettre sur la carte reseau N°2.





Préparez la communication :

Ansible travaille avec des outils déjà très utilisés sur les systèmes Linux. En effet, Ansible a uniquement besoin de SSH et de Python pour fonctionner. 
Il faut donc au minimum que ces 2 outils soient installés et fonctionnels sur le node manager et les nodes. 


Pour établir la communication et avoir le droit de lancer des commandes à distance, vous avez besoin de :

             - Définir un inventaire des nodes.

             - Vérifier la connexion SSH entre le node manger et les nodes.

             - Lancer un ping avec Ansible sur les nodes.

             - Vérifier que Python est installé sur les nodes.

             - Créer un simple utilisateur sur les nodes.

             - Attribuer les droits sudo à cet utilisateur.

             - Créer une paire de clés SSH pour cet utilisateur.

             - Copier la clé publique SSH sur les nodes. 
         


Définissez un inventaire des nodes :

Il est temps de nommer vos serveurs
configurer la résolution de nom via le fichier  /etc/hosts sur le node manager.

Connectez-vous sur le node manager en root.

installer vim oour modifier les fichier avec des droit root comme le file hosts

**************** apt-get update *********************
**************** apt-get install vim ****************

Ajoutez dans le fichier /etc/hosts sur le node manager l’enregistrement des 2 nodes : 

Vim a deux modes.
1. Mode insertion (où vous pouvez simplement taper comme un éditeur de texte normal. Appuyez sur i pour le mode insertion)
2. Mode de commande (où vous donnez des commandes à l'éditeur pour faire avancer les choses. Appuyez sur ESC pour le mode de commande)

La plupart d'entre eux ci-dessous sont en mode commande :

              x - pour supprimer le caractère indésirable
              u - pour annuler la dernière commande et U pour annuler toute la ligne
              CTRL-R pour refaire
              A - pour ajouter du texte à la fin
              :wq - pour enregistrer et quitter
              :q! - supprimer tous les changements
              dw - déplacez le curseur au début du mot pour supprimer ce mot
              2w - pour déplacer le curseur de deux mots vers l'avant.
              3e - pour déplacer le curseur à la fin du troisième mot vers l'avant.
              0 (zéro) pour passer au début de la ligne.
              d2w - qui supprime 2 mots .. le nombre peut être modifié pour supprimer le nombre de mots consécutifs comme d3w
              dd pour supprimer la ligne et 2dd pour supprimer la ligne. le numéro peut être modifié pour supprimer le nombre de mots consécutifs

exemple :     127.0.0.1 localhost
              127.0.1.1 node-manager
              # le node .......
              ************* 192.168.122.11 ........ ***********
              # le node .........
              **************** 192.168.122.12 ....... ************
              
Cette action vous permettra d’utiliser les noms http1 et bdd1 pour communiquer avec les nodes.




Créez le fichier inventaire Ansible :

Pour fonctionner, Ansible a besoin d’un fichier inventaire. Ce fichier contient la liste des nodes. Vous allez donc enregistrer le nom des nodes dans ce fichier.

Placez-vous dans votre environnement virtuel :

**************************$ source ansible2.7.10/bin/activate***************************************
(ansible2.7.10) user-ansible@node-manager:~$

Puis éditez avec la commande vim le fichier inventaire.ini :

********************(ansible2.7.10) user-ansible@node-manager:~$ vim inventaire.ini*******************************
Mettez dans ce fichier les 2 noms des nodes :

       - http1
       - bdd1
       
       
       
Vérifiez que vous communiquez avec les nodes :       

Avant d’utiliser Ansible pour commencer à automatiser des tâches, lancez une connexion SSH sur les nodes pour enregistrer la fingerprint 
(l'empreinte du serveur qui doit être vérifiée pour être sûr de se connecter au bon node) sur le node manager. 
Il faut le faire au moins une fois, sinon Ansible râlera à la première connexion, car le paquet sshpass ne sait pas gérer le fingerprint.

*************************** $ ssh root@(nom_du_hostname) **********************

Utilisez la commande ansible en mode ad-hoc pour tester la connexion entre les nodes et le master.
Lancez maintenant un ping avec Ansible dans votre environnement de travail virtuel :

****************** ansible -i inventaire.ini -m ping + (Ip ou name mis dans le fichier host qui represente l'IP) --user master (hostname comme master ou root) --ask-pass (demander le password)

retour normal :

              http1 | SUCCESS => {
              "changed": false,
              "ping": "pong"
              }
              
Vous venez d’utiliser la commande ansible avec plusieurs options : 

             - -i : indique à Ansible l’emplacement du fichier inventaire ;

             - -m : indique à Ansible d’utiliser le module ping ;

             - http1 : indique à Ansible de faire l’action sur le node http1 ;

             - --user : indique à Ansible d’utiliser l’utilisateur root pour se connecter au node (pas le choix pour le moment, car c’est le seul compte dont vous disposez) ;

             - --ask-pass : indique à Ansible de demander le mot de passe SSH ;

             - http1 : indique à Ansible de lancer la commande sur le node http1.

Le retour de la commande vous indique que l’action est un succès et répond pong au ping ! Le node http1 est bien joignable. 

Ansible ne lance pas la commande ping, il lance un module qui fait la même chose que la commande ping.        


Un module est un programme utilisé pour exécuter une tâche ou une commande Ansible.



